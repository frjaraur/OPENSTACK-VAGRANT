# -*- mode: ruby -*-
# vi: set ft=ruby :


#TODO
# - DEFAULT_PASSWORD for every service in yml.
# - GLANCE_STORAGE variable in yml.
# - SERVICES definitions with node configuration for each one.
# - hosts file should be created using configuration from yml.

require 'yaml'

current_dir    = File.dirname(File.expand_path(__FILE__))
configs        = YAML.load_file("#{current_dir}/../labconfig.yml")
openstack_configs = configs['OPENSTACK']
default_password=configs['OPENSTACK']['configs']['default_password']
node_config=openstack_configs['nodes']['controller']


#NOT READY YET
#all_hosts = ["10.0.0.11 controller", "10.0.0.31 compute1","10.0.0.41 block1","10.0.0.51 storage1"]
#all_hosts.each { |x| puts x }

create_hostsfile = <<HOSTFILE
echo "127.0.1.1 localhost" >  /etc/hosts
echo "10.0.0.11 controller" | tee -a /etc/hosts
echo "10.0.0.31 compute1" | tee -a /etc/hosts
echo "10.0.0.41 block1" | tee -a /etc/hosts
echo "10.0.0.51 storage1" | tee -a /etc/hosts
HOSTFILE


Vagrant.configure(2) do |config|
  config.vm.hostname = node_config['node_name']
  config.vm.box = "ubuntu/trusty64"

  config.vm.provider "virtualbox" do |vb|
     vb.memory = "2048"
  end
  if Vagrant.has_plugin?("vagrant-timezone")
    config.timezone.value = :host
  end

  config.vm.provision :shell, :inline => create_hostsfile

  config.vm.network "private_network", ip: node_config['management_ip'],
    virtualbox__intnet: "OPENSTACK_MANAGEMENT"

  config.vm.network "private_network", ip: node_config['public_ip'],
    virtualbox__intnet: "OPENSTACK_PUBLIC"

  config.vm.network "public_network",
    use_dhcp_assigned_default_route: true

  config.vm.network "forwarded_port", guest: 80, host: 8080
  #config.vm.network "forwarded_port", guest: 22, host: 2222

  # PROVISION LONGFILES
  config.vm.provision "file", source: "../configfiles/mysqld_openstack.cnf", destination: "/tmp/mysqld_openstack.cnf"
  config.vm.provision "file", source: "../configfiles/wsgi-keystone.conf", destination: "/tmp/wsgi-keystone.conf"
  config.vm.provision "file", source: "../configfiles/admin-openrc.sh", destination: "/tmp/admin-openrc.sh"
  config.vm.provision "file", source: "../configfiles/demo-openrc.sh", destination: "/tmp/demo-openrc.sh"
  config.vm.provision "fix-no-tty", type: "shell" do |s|
      s.privileged = false
      s.inline = "sudo sed -i '/tty/!s/mesg n/tty -s \\&\\& mesg n/' /root/.profile"
  end

  config.vm.provision "shell", path: "../provision/install_controller.sh", :args => [default_password, node_config['management_ip'], node_config['node_name']]

end
